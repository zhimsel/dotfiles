#!/bin/bash

# this script is designed to check all hosts/IPs that it is given against
# the shellshock vulnerability

# print some usage text if no arguments are given
[[ -n "$1" ]] || \
{ echo "Usage: $(basename "$0") [server_list.txt] OR [server1 server2 server3] ..."
  echo -e "\tuse $(basename "$0") -f for local check"; exit 0 ; }

# define the location for the actual check script
bashcheck="/tmp/bashcheck.$RANDOM"
# exit cleanly on ctrl-c
trap 'rm -f $bashcheck; exit 0' SIGINT SIGTERM

# pull latest check script from github
if [[ -e $bashcheck ]]; then
     echo "$bashcheck exists, please remove before continuing"; exit 1
else
     curl -s https://raw.githubusercontent.com/zhimsel/bashcheck/master/bashcheck > $bashcheck
fi

ssh_command () {
     ssh -oStrictHostKeyChecking=no -oBatchMode=yes -oConnectTimeout=5 \
     -oPasswordAuthentication=no "$SERVER" /bin/bash 2>&1
}

run_test () {
     ssh_command < $bashcheck | sed "s/HOSTNAME/$SERVER/"
}


# get your server list from file or the command line (or do local for -f)
# if first arg is a file, then use that as the list of servers
# otherwise use the remaining args as your server list
# and then do it!
if [[ $1 == "-l" ]]; then
     bash $bashcheck
elif [ -f "$1" ]; then
     while read -r SERVER; do
          run_test
     done < "$1"
else
     for SERVER in "$@"; do
          run_test
     done
fi

rm -f $bashcheck
